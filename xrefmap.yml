### YamlMime:XRefMap
sorted: true
references:
- uid: armonik_api_samples
  name: Armonik.Samples API
  href: api/index.html
- uid: ArmoniK.Samples.Common
  name: ArmoniK.Samples.Common
  href: api/ArmoniK.Samples.Common.html
  commentId: N:ArmoniK.Samples.Common
  fullName: ArmoniK.Samples.Common
  nameWithType: ArmoniK.Samples.Common
- uid: ArmoniK.Samples.Common.ClientPayload
  name: ClientPayload
  href: api/ArmoniK.Samples.Common.ClientPayload.html
  commentId: T:ArmoniK.Samples.Common.ClientPayload
  fullName: ArmoniK.Samples.Common.ClientPayload
  nameWithType: ClientPayload
- uid: ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte[])
  name: deserialize(byte[])
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_deserialize_System_Byte___
  commentId: M:ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte[])
  name.vb: deserialize(Byte())
  fullName: ArmoniK.Samples.Common.ClientPayload.deserialize(byte[])
  fullName.vb: ArmoniK.Samples.Common.ClientPayload.deserialize(Byte())
  nameWithType: ClientPayload.deserialize(byte[])
  nameWithType.vb: ClientPayload.deserialize(Byte())
- uid: ArmoniK.Samples.Common.ClientPayload.deserialize*
  name: deserialize
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_deserialize_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.deserialize
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.deserialize
  nameWithType: ClientPayload.deserialize
- uid: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  name: IsRootTask
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_IsRootTask
  commentId: P:ArmoniK.Samples.Common.ClientPayload.IsRootTask
  fullName: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: ArmoniK.Samples.Common.ClientPayload.IsRootTask*
  name: IsRootTask
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_IsRootTask_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.IsRootTask
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: ArmoniK.Samples.Common.ClientPayload.numbers
  name: numbers
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_numbers
  commentId: P:ArmoniK.Samples.Common.ClientPayload.numbers
  fullName: ArmoniK.Samples.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: ArmoniK.Samples.Common.ClientPayload.numbers*
  name: numbers
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_numbers_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.numbers
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: ArmoniK.Samples.Common.ClientPayload.result
  name: result
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_result
  commentId: P:ArmoniK.Samples.Common.ClientPayload.result
  fullName: ArmoniK.Samples.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: ArmoniK.Samples.Common.ClientPayload.result*
  name: result
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_result_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.result
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: ArmoniK.Samples.Common.ClientPayload.serialize
  name: serialize()
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_serialize
  commentId: M:ArmoniK.Samples.Common.ClientPayload.serialize
  fullName: ArmoniK.Samples.Common.ClientPayload.serialize()
  nameWithType: ClientPayload.serialize()
- uid: ArmoniK.Samples.Common.ClientPayload.serialize*
  name: serialize
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_serialize_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.serialize
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.serialize
  nameWithType: ClientPayload.serialize
- uid: ArmoniK.Samples.Common.ClientPayload.sleep
  name: sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_sleep
  commentId: P:ArmoniK.Samples.Common.ClientPayload.sleep
  fullName: ArmoniK.Samples.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: ArmoniK.Samples.Common.ClientPayload.sleep*
  name: sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_sleep_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.sleep
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  name: SubTaskId
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_SubTaskId
  commentId: P:ArmoniK.Samples.Common.ClientPayload.SubTaskId
  fullName: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: ArmoniK.Samples.Common.ClientPayload.SubTaskId*
  name: SubTaskId
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_SubTaskId_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.SubTaskId
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType
  name: ClientPayload.TaskType
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html
  commentId: T:ArmoniK.Samples.Common.ClientPayload.TaskType
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType
  nameWithType: ClientPayload.TaskType
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  name: Aggregation
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Aggregation
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  nameWithType: ClientPayload.TaskType.Aggregation
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  name: ComputeCube
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_ComputeCube
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  nameWithType: ClientPayload.TaskType.ComputeCube
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  name: ComputeSquare
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_ComputeSquare
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  nameWithType: ClientPayload.TaskType.ComputeSquare
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  name: JobOfNTasks
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_JobOfNTasks
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  nameWithType: ClientPayload.TaskType.JobOfNTasks
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  name: NJobOf1Tasks
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_NJobOf1Tasks
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  nameWithType: ClientPayload.TaskType.NJobOf1Tasks
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  name: Result
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Result
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  nameWithType: ClientPayload.TaskType.Result
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  name: Sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Sleep
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  nameWithType: ClientPayload.TaskType.Sleep
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  name: SubTask
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_SubTask
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  nameWithType: ClientPayload.TaskType.SubTask
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  name: Undefined
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Undefined
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  nameWithType: ClientPayload.TaskType.Undefined
- uid: ArmoniK.Samples.Common.ClientPayload.Type
  name: Type
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_Type
  commentId: P:ArmoniK.Samples.Common.ClientPayload.Type
  fullName: ArmoniK.Samples.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Common.ClientPayload.Type*
  name: Type
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_Type_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.Type
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Common.SelectExtensions
  name: SelectExtensions
  href: api/ArmoniK.Samples.Common.SelectExtensions.html
  commentId: T:ArmoniK.Samples.Common.SelectExtensions
  fullName: ArmoniK.Samples.Common.SelectExtensions
  nameWithType: SelectExtensions
- uid: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable{System.Byte})
  name: ConvertToArray(IEnumerable<byte>)
  href: api/ArmoniK.Samples.Common.SelectExtensions.html#ArmoniK_Samples_Common_SelectExtensions_ConvertToArray_System_Collections_Generic_IEnumerable_System_Byte__
  commentId: M:ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable{System.Byte})
  name.vb: ConvertToArray(IEnumerable(Of Byte))
  fullName: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable<byte>)
  fullName.vb: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable(Of Byte))
  nameWithType: SelectExtensions.ConvertToArray(IEnumerable<byte>)
  nameWithType.vb: SelectExtensions.ConvertToArray(IEnumerable(Of Byte))
- uid: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray*
  name: ConvertToArray
  href: api/ArmoniK.Samples.Common.SelectExtensions.html#ArmoniK_Samples_Common_SelectExtensions_ConvertToArray_
  commentId: Overload:ArmoniK.Samples.Common.SelectExtensions.ConvertToArray
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray
  nameWithType: SelectExtensions.ConvertToArray
- uid: ArmoniK.Samples.Common.Utils
  name: Utils
  href: api/ArmoniK.Samples.Common.Utils.html
  commentId: T:ArmoniK.Samples.Common.Utils
  fullName: ArmoniK.Samples.Common.Utils
  nameWithType: Utils
- uid: ArmoniK.Samples.Common.Utils.ParamsHelper(System.Object[])
  name: ParamsHelper(params object[])
  href: api/ArmoniK.Samples.Common.Utils.html#ArmoniK_Samples_Common_Utils_ParamsHelper_System_Object___
  commentId: M:ArmoniK.Samples.Common.Utils.ParamsHelper(System.Object[])
  name.vb: ParamsHelper(ParamArray Object())
  fullName: ArmoniK.Samples.Common.Utils.ParamsHelper(params object[])
  fullName.vb: ArmoniK.Samples.Common.Utils.ParamsHelper(ParamArray Object())
  nameWithType: Utils.ParamsHelper(params object[])
  nameWithType.vb: Utils.ParamsHelper(ParamArray Object())
- uid: ArmoniK.Samples.Common.Utils.ParamsHelper*
  name: ParamsHelper
  href: api/ArmoniK.Samples.Common.Utils.html#ArmoniK_Samples_Common_Utils_ParamsHelper_
  commentId: Overload:ArmoniK.Samples.Common.Utils.ParamsHelper
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.Utils.ParamsHelper
  nameWithType: Utils.ParamsHelper
- uid: ArmoniK.Samples.Common.Utils.PeriodicInfo(System.Action,System.Int32)
  name: PeriodicInfo(Action, int)
  href: api/ArmoniK.Samples.Common.Utils.html#ArmoniK_Samples_Common_Utils_PeriodicInfo_System_Action_System_Int32_
  commentId: M:ArmoniK.Samples.Common.Utils.PeriodicInfo(System.Action,System.Int32)
  name.vb: PeriodicInfo(Action, Integer)
  fullName: ArmoniK.Samples.Common.Utils.PeriodicInfo(System.Action, int)
  fullName.vb: ArmoniK.Samples.Common.Utils.PeriodicInfo(System.Action, Integer)
  nameWithType: Utils.PeriodicInfo(Action, int)
  nameWithType.vb: Utils.PeriodicInfo(Action, Integer)
- uid: ArmoniK.Samples.Common.Utils.PeriodicInfo*
  name: PeriodicInfo
  href: api/ArmoniK.Samples.Common.Utils.html#ArmoniK_Samples_Common_Utils_PeriodicInfo_
  commentId: Overload:ArmoniK.Samples.Common.Utils.PeriodicInfo
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.Utils.PeriodicInfo
  nameWithType: Utils.PeriodicInfo
- uid: ArmoniK.Samples.GridServer.Client.Services
  name: ArmoniK.Samples.GridServer.Client.Services
  href: api/ArmoniK.Samples.GridServer.Client.Services.html
  commentId: N:ArmoniK.Samples.GridServer.Client.Services
  fullName: ArmoniK.Samples.GridServer.Client.Services
  nameWithType: ArmoniK.Samples.GridServer.Client.Services
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html
  commentId: T:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  name: ServiceContainer()
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer__ctor
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  name.vb: New()
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ServiceContainer()
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.New()
  nameWithType: ServiceContainer.ServiceContainer()
  nameWithType.vb: ServiceContainer.New()
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor*
  name: ServiceContainer
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer__ctor_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ServiceContainer
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.New
  nameWithType: ServiceContainer.ServiceContainer
  nameWithType.vb: ServiceContainer.New
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double[])
  name: ComputeBasicArrayCube(double[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeBasicArrayCube_System_Double___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double[])
  name.vb: ComputeBasicArrayCube(Double())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(double[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(Double())
  nameWithType: ServiceContainer.ComputeBasicArrayCube(double[])
  nameWithType.vb: ServiceContainer.ComputeBasicArrayCube(Double())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube*
  name: ComputeBasicArrayCube
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeBasicArrayCube_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube
  nameWithType: ServiceContainer.ComputeBasicArrayCube
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: ComputeMadd(byte[], byte[], double)
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: ComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(byte[], byte[], double)
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(Byte(), Byte(), Double)
  nameWithType: ServiceContainer.ComputeMadd(byte[], byte[], double)
  nameWithType.vb: ServiceContainer.ComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd*
  name: ComputeMadd
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeMadd_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd
  nameWithType: ServiceContainer.ComputeMadd
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte[])
  name: ComputeReduceCube(byte[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_System_Byte___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte[])
  name.vb: ComputeReduceCube(Byte())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(byte[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(Byte())
  nameWithType: ServiceContainer.ComputeReduceCube(byte[])
  nameWithType.vb: ServiceContainer.ComputeReduceCube(Byte())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double[])
  name: ComputeReduceCube(double[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_System_Double___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double[])
  name.vb: ComputeReduceCube(Double())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(double[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(Double())
  nameWithType: ServiceContainer.ComputeReduceCube(double[])
  nameWithType.vb: ServiceContainer.ComputeReduceCube(Double())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube*
  name: ComputeReduceCube
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube
  nameWithType: ServiceContainer.ComputeReduceCube
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: NonStaticComputeMadd(byte[], byte[], double)
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_NonStaticComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: NonStaticComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(byte[], byte[], double)
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(Byte(), Byte(), Double)
  nameWithType: ServiceContainer.NonStaticComputeMadd(byte[], byte[], double)
  nameWithType.vb: ServiceContainer.NonStaticComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd*
  name: NonStaticComputeMadd
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_NonStaticComputeMadd_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd
  nameWithType: ServiceContainer.NonStaticComputeMadd
- uid: ArmoniK.Samples.GridServer.Common
  name: ArmoniK.Samples.GridServer.Common
  href: api/ArmoniK.Samples.GridServer.Common.html
  commentId: N:ArmoniK.Samples.GridServer.Common
  fullName: ArmoniK.Samples.GridServer.Common
  nameWithType: ArmoniK.Samples.GridServer.Common
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions
  name: SelectExtensions
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html
  commentId: T:ArmoniK.Samples.GridServer.Common.SelectExtensions
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions
  nameWithType: SelectExtensions
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable{System.Byte})
  name: ConvertToArray(IEnumerable<byte>)
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html#ArmoniK_Samples_GridServer_Common_SelectExtensions_ConvertToArray_System_Collections_Generic_IEnumerable_System_Byte__
  commentId: M:ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable{System.Byte})
  name.vb: ConvertToArray(IEnumerable(Of Byte))
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable<byte>)
  fullName.vb: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(System.Collections.Generic.IEnumerable(Of Byte))
  nameWithType: SelectExtensions.ConvertToArray(IEnumerable<byte>)
  nameWithType.vb: SelectExtensions.ConvertToArray(IEnumerable(Of Byte))
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray*
  name: ConvertToArray
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html#ArmoniK_Samples_GridServer_Common_SelectExtensions_ConvertToArray_
  commentId: Overload:ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray
  nameWithType: SelectExtensions.ConvertToArray
- uid: ArmoniK.Samples.HelloWorld.Worker
  name: ArmoniK.Samples.HelloWorld.Worker
  href: api/ArmoniK.Samples.HelloWorld.Worker.html
  commentId: N:ArmoniK.Samples.HelloWorld.Worker
  fullName: ArmoniK.Samples.HelloWorld.Worker
  nameWithType: ArmoniK.Samples.HelloWorld.Worker
- uid: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker
  name: HelloWorldWorker
  href: api/ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.html
  commentId: T:ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker
  fullName: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker
  nameWithType: HelloWorldWorker
- uid: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  name: HelloWorldWorker(ILoggerFactory, GrpcChannelProvider)
  href: api/ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.html#ArmoniK_Samples_HelloWorld_Worker_HelloWorldWorker__ctor_Microsoft_Extensions_Logging_ILoggerFactory_ArmoniK_Api_Common_Channel_Utils_GrpcChannelProvider_
  commentId: M:ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  name.vb: New(ILoggerFactory, GrpcChannelProvider)
  fullName: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.HelloWorldWorker(Microsoft.Extensions.Logging.ILoggerFactory, ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  fullName.vb: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.New(Microsoft.Extensions.Logging.ILoggerFactory, ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  nameWithType: HelloWorldWorker.HelloWorldWorker(ILoggerFactory, GrpcChannelProvider)
  nameWithType.vb: HelloWorldWorker.New(ILoggerFactory, GrpcChannelProvider)
- uid: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.#ctor*
  name: HelloWorldWorker
  href: api/ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.html#ArmoniK_Samples_HelloWorld_Worker_HelloWorldWorker__ctor_
  commentId: Overload:ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.HelloWorldWorker
  fullName.vb: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.New
  nameWithType: HelloWorldWorker.HelloWorldWorker
  nameWithType.vb: HelloWorldWorker.New
- uid: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  name: Process(ITaskHandler)
  href: api/ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.html#ArmoniK_Samples_HelloWorld_Worker_HelloWorldWorker_Process_ArmoniK_Api_Worker_Worker_ITaskHandler_
  commentId: M:ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  fullName: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  nameWithType: HelloWorldWorker.Process(ITaskHandler)
- uid: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process*
  name: Process
  href: api/ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.html#ArmoniK_Samples_HelloWorld_Worker_HelloWorldWorker_Process_
  commentId: Overload:ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process
  isSpec: "True"
  fullName: ArmoniK.Samples.HelloWorld.Worker.HelloWorldWorker.Process
  nameWithType: HelloWorldWorker.Process
- uid: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker
  name: MultipleResultsWorker
  href: api/ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.html
  commentId: T:ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker
  fullName: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker
  nameWithType: MultipleResultsWorker
- uid: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  name: MultipleResultsWorker(ILoggerFactory, GrpcChannelProvider)
  href: api/ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.html#ArmoniK_Samples_HelloWorld_Worker_MultipleResultsWorker__ctor_Microsoft_Extensions_Logging_ILoggerFactory_ArmoniK_Api_Common_Channel_Utils_GrpcChannelProvider_
  commentId: M:ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  name.vb: New(ILoggerFactory, GrpcChannelProvider)
  fullName: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.MultipleResultsWorker(Microsoft.Extensions.Logging.ILoggerFactory, ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  fullName.vb: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.New(Microsoft.Extensions.Logging.ILoggerFactory, ArmoniK.Api.Common.Channel.Utils.GrpcChannelProvider)
  nameWithType: MultipleResultsWorker.MultipleResultsWorker(ILoggerFactory, GrpcChannelProvider)
  nameWithType.vb: MultipleResultsWorker.New(ILoggerFactory, GrpcChannelProvider)
- uid: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.#ctor*
  name: MultipleResultsWorker
  href: api/ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.html#ArmoniK_Samples_HelloWorld_Worker_MultipleResultsWorker__ctor_
  commentId: Overload:ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.MultipleResultsWorker
  fullName.vb: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.New
  nameWithType: MultipleResultsWorker.MultipleResultsWorker
  nameWithType.vb: MultipleResultsWorker.New
- uid: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  name: Process(ITaskHandler)
  href: api/ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.html#ArmoniK_Samples_HelloWorld_Worker_MultipleResultsWorker_Process_ArmoniK_Api_Worker_Worker_ITaskHandler_
  commentId: M:ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  fullName: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process(ArmoniK.Api.Worker.Worker.ITaskHandler)
  nameWithType: MultipleResultsWorker.Process(ITaskHandler)
- uid: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process*
  name: Process
  href: api/ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.html#ArmoniK_Samples_HelloWorld_Worker_MultipleResultsWorker_Process_
  commentId: Overload:ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process
  isSpec: "True"
  fullName: ArmoniK.Samples.HelloWorld.Worker.MultipleResultsWorker.Process
  nameWithType: MultipleResultsWorker.Process
- uid: ArmoniK.Samples.HtcMockSymphony.Packages
  name: ArmoniK.Samples.HtcMockSymphony.Packages
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.html
  commentId: N:ArmoniK.Samples.HtcMockSymphony.Packages
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages
  nameWithType: ArmoniK.Samples.HtcMockSymphony.Packages
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html
  commentId: T:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  name: OnCreateService(ServiceContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnCreateService_ArmoniK_DevelopmentKit_Worker_Symphony_ServiceContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  nameWithType: ServiceContainer.OnCreateService(ServiceContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService*
  name: OnCreateService
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnCreateService_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService
  nameWithType: ServiceContainer.OnCreateService
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  name: OnDestroyService(ServiceContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnDestroyService_ArmoniK_DevelopmentKit_Worker_Symphony_ServiceContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  nameWithType: ServiceContainer.OnDestroyService(ServiceContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService*
  name: OnDestroyService
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnDestroyService_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService
  nameWithType: ServiceContainer.OnDestroyService
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext,ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  name: OnInvoke(SessionContext, TaskContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnInvoke_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_ArmoniK_DevelopmentKit_Worker_Symphony_TaskContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext,ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext, ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  nameWithType: ServiceContainer.OnInvoke(SessionContext, TaskContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke*
  name: OnInvoke
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnInvoke_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke
  nameWithType: ServiceContainer.OnInvoke
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  name: OnSessionEnter(SessionContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionEnter_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  nameWithType: ServiceContainer.OnSessionEnter(SessionContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter*
  name: OnSessionEnter
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionEnter_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter
  nameWithType: ServiceContainer.OnSessionEnter
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  name: OnSessionLeave(SessionContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionLeave_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  nameWithType: ServiceContainer.OnSessionLeave(SessionContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave*
  name: OnSessionLeave
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionLeave_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave
  nameWithType: ServiceContainer.OnSessionLeave
- uid: ArmoniK.Samples.HtcMockSymphonyClient
  name: ArmoniK.Samples.HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.html
  commentId: N:ArmoniK.Samples.HtcMockSymphonyClient
  fullName: ArmoniK.Samples.HtcMockSymphonyClient
  nameWithType: ArmoniK.Samples.HtcMockSymphonyClient
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  name: HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html
  commentId: T:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  nameWithType: HtcMockSymphonyClient
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor(ArmoniK.DevelopmentKit.Client.Symphony.SessionService,Microsoft.Extensions.Logging.ILogger{Htc.Mock.Client})
  name: HtcMockSymphonyClient(SessionService, ILogger<Client>)
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient__ctor_ArmoniK_DevelopmentKit_Client_Symphony_SessionService_Microsoft_Extensions_Logging_ILogger_Htc_Mock_Client__
  commentId: M:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor(ArmoniK.DevelopmentKit.Client.Symphony.SessionService,Microsoft.Extensions.Logging.ILogger{Htc.Mock.Client})
  name.vb: New(SessionService, ILogger(Of Client))
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.HtcMockSymphonyClient(ArmoniK.DevelopmentKit.Client.Symphony.SessionService, Microsoft.Extensions.Logging.ILogger<Htc.Mock.Client>)
  fullName.vb: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.New(ArmoniK.DevelopmentKit.Client.Symphony.SessionService, Microsoft.Extensions.Logging.ILogger(Of Htc.Mock.Client))
  nameWithType: HtcMockSymphonyClient.HtcMockSymphonyClient(SessionService, ILogger<Client>)
  nameWithType.vb: HtcMockSymphonyClient.New(SessionService, ILogger(Of Client))
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor*
  name: HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.HtcMockSymphonyClient
  fullName.vb: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.New
  nameWithType: HtcMockSymphonyClient.HtcMockSymphonyClient
  nameWithType.vb: HtcMockSymphonyClient.New
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(Htc.Mock.Core.RunConfiguration)
  name: Start(RunConfiguration)
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient_Start_Htc_Mock_Core_RunConfiguration_
  commentId: M:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(Htc.Mock.Core.RunConfiguration)
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(Htc.Mock.Core.RunConfiguration)
  nameWithType: HtcMockSymphonyClient.Start(RunConfiguration)
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start*
  name: Start
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient_Start_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start
  nameWithType: HtcMockSymphonyClient.Start
- uid: Armonik.Samples.StressTests.Client.Metrics
  name: Armonik.Samples.StressTests.Client.Metrics
  href: api/Armonik.Samples.StressTests.Client.Metrics.html
  commentId: N:Armonik.Samples.StressTests.Client.Metrics
  fullName: Armonik.Samples.StressTests.Client.Metrics
  nameWithType: Armonik.Samples.StressTests.Client.Metrics
- uid: Armonik.Samples.StressTests.Client.Metrics.Formatting
  name: Formatting
  href: api/Armonik.Samples.StressTests.Client.Metrics.Formatting.html
  commentId: T:Armonik.Samples.StressTests.Client.Metrics.Formatting
  fullName: Armonik.Samples.StressTests.Client.Metrics.Formatting
  nameWithType: Formatting
- uid: Armonik.Samples.StressTests.Client.Metrics.Formatting.Json
  name: Json
  href: api/Armonik.Samples.StressTests.Client.Metrics.Formatting.html#Armonik_Samples_StressTests_Client_Metrics_Formatting_Json
  commentId: F:Armonik.Samples.StressTests.Client.Metrics.Formatting.Json
  fullName: Armonik.Samples.StressTests.Client.Metrics.Formatting.Json
  nameWithType: Formatting.Json
- uid: Armonik.Samples.StressTests.Client.Metrics.Formatting.Raw
  name: Raw
  href: api/Armonik.Samples.StressTests.Client.Metrics.Formatting.html#Armonik_Samples_StressTests_Client_Metrics_Formatting_Raw
  commentId: F:Armonik.Samples.StressTests.Client.Metrics.Formatting.Raw
  fullName: Armonik.Samples.StressTests.Client.Metrics.Formatting.Raw
  nameWithType: Formatting.Raw
- uid: Armonik.Samples.StressTests.Worker
  name: Armonik.Samples.StressTests.Worker
  href: api/Armonik.Samples.StressTests.Worker.html
  commentId: N:Armonik.Samples.StressTests.Worker
  fullName: Armonik.Samples.StressTests.Worker
  nameWithType: Armonik.Samples.StressTests.Worker
- uid: Armonik.Samples.StressTests.Worker.ServiceApps
  name: ServiceApps
  href: api/Armonik.Samples.StressTests.Worker.ServiceApps.html
  commentId: T:Armonik.Samples.StressTests.Worker.ServiceApps
  fullName: Armonik.Samples.StressTests.Worker.ServiceApps
  nameWithType: ServiceApps
- uid: Armonik.Samples.StressTests.Worker.ServiceApps.#ctor
  name: ServiceApps()
  href: api/Armonik.Samples.StressTests.Worker.ServiceApps.html#Armonik_Samples_StressTests_Worker_ServiceApps__ctor
  commentId: M:Armonik.Samples.StressTests.Worker.ServiceApps.#ctor
  name.vb: New()
  fullName: Armonik.Samples.StressTests.Worker.ServiceApps.ServiceApps()
  fullName.vb: Armonik.Samples.StressTests.Worker.ServiceApps.New()
  nameWithType: ServiceApps.ServiceApps()
  nameWithType.vb: ServiceApps.New()
- uid: Armonik.Samples.StressTests.Worker.ServiceApps.#ctor*
  name: ServiceApps
  href: api/Armonik.Samples.StressTests.Worker.ServiceApps.html#Armonik_Samples_StressTests_Worker_ServiceApps__ctor_
  commentId: Overload:Armonik.Samples.StressTests.Worker.ServiceApps.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Armonik.Samples.StressTests.Worker.ServiceApps.ServiceApps
  fullName.vb: Armonik.Samples.StressTests.Worker.ServiceApps.New
  nameWithType: ServiceApps.ServiceApps
  nameWithType.vb: ServiceApps.New
- uid: Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad(System.Double[],System.Int64,System.Int32)
  name: ComputeWorkLoad(double[], long, int)
  href: api/Armonik.Samples.StressTests.Worker.ServiceApps.html#Armonik_Samples_StressTests_Worker_ServiceApps_ComputeWorkLoad_System_Double___System_Int64_System_Int32_
  commentId: M:Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad(System.Double[],System.Int64,System.Int32)
  name.vb: ComputeWorkLoad(Double(), Long, Integer)
  fullName: Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad(double[], long, int)
  fullName.vb: Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad(Double(), Long, Integer)
  nameWithType: ServiceApps.ComputeWorkLoad(double[], long, int)
  nameWithType.vb: ServiceApps.ComputeWorkLoad(Double(), Long, Integer)
- uid: Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad*
  name: ComputeWorkLoad
  href: api/Armonik.Samples.StressTests.Worker.ServiceApps.html#Armonik_Samples_StressTests_Worker_ServiceApps_ComputeWorkLoad_
  commentId: Overload:Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad
  isSpec: "True"
  fullName: Armonik.Samples.StressTests.Worker.ServiceApps.ComputeWorkLoad
  nameWithType: ServiceApps.ComputeWorkLoad
- uid: Armonik.Samples.Symphony.Common
  name: Armonik.Samples.Symphony.Common
  href: api/Armonik.Samples.Symphony.Common.html
  commentId: N:Armonik.Samples.Symphony.Common
  fullName: Armonik.Samples.Symphony.Common
  nameWithType: Armonik.Samples.Symphony.Common
- uid: Armonik.Samples.Symphony.Common.ClientPayload
  name: ClientPayload
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html
  commentId: T:Armonik.Samples.Symphony.Common.ClientPayload
  fullName: Armonik.Samples.Symphony.Common.ClientPayload
  nameWithType: ClientPayload
- uid: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte[])
  name: deserialize(byte[])
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_deserialize_System_Byte___
  commentId: M:Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte[])
  name.vb: deserialize(Byte())
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(byte[])
  fullName.vb: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(Byte())
  nameWithType: ClientPayload.deserialize(byte[])
  nameWithType.vb: ClientPayload.deserialize(Byte())
- uid: Armonik.Samples.Symphony.Common.ClientPayload.deserialize*
  name: deserialize
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_deserialize_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.deserialize
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.deserialize
  nameWithType: ClientPayload.deserialize
- uid: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  name: IsRootTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_IsRootTask
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask*
  name: IsRootTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_IsRootTask_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  name: numbers
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_numbers
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.numbers
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: Armonik.Samples.Symphony.Common.ClientPayload.numbers*
  name: numbers
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_numbers_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.numbers
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: Armonik.Samples.Symphony.Common.ClientPayload.result
  name: result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_result
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.result
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.result*
  name: result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_result_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.result
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.serialize
  name: serialize()
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_serialize
  commentId: M:Armonik.Samples.Symphony.Common.ClientPayload.serialize
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.serialize()
  nameWithType: ClientPayload.serialize()
- uid: Armonik.Samples.Symphony.Common.ClientPayload.serialize*
  name: serialize
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_serialize_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.serialize
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.serialize
  nameWithType: ClientPayload.serialize
- uid: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  name: sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_sleep
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.sleep
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.sleep*
  name: sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_sleep_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.sleep
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  name: SubTaskId
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_SubTaskId
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId*
  name: SubTaskId
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_SubTaskId_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  name: ClientPayload.TaskType
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html
  commentId: T:Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  nameWithType: ClientPayload.TaskType
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  name: Aggregation
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Aggregation
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  nameWithType: ClientPayload.TaskType.Aggregation
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  name: ComputeCube
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_ComputeCube
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  nameWithType: ClientPayload.TaskType.ComputeCube
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  name: ComputeSquare
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_ComputeSquare
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  nameWithType: ClientPayload.TaskType.ComputeSquare
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  name: JobOfNTasks
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_JobOfNTasks
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  nameWithType: ClientPayload.TaskType.JobOfNTasks
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  name: NJobOf1Tasks
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_NJobOf1Tasks
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  nameWithType: ClientPayload.TaskType.NJobOf1Tasks
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  name: Result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Result
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  nameWithType: ClientPayload.TaskType.Result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  name: Sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Sleep
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  nameWithType: ClientPayload.TaskType.Sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  name: SubTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_SubTask
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  nameWithType: ClientPayload.TaskType.SubTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  name: Undefined
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Undefined
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  nameWithType: ClientPayload.TaskType.Undefined
- uid: Armonik.Samples.Symphony.Common.ClientPayload.Type
  name: Type
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_Type
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.Type
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: Armonik.Samples.Symphony.Common.ClientPayload.Type*
  name: Type
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_Type_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.Type
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Symphony.Packages
  name: ArmoniK.Samples.Symphony.Packages
  href: api/ArmoniK.Samples.Symphony.Packages.html
  commentId: N:ArmoniK.Samples.Symphony.Packages
  fullName: ArmoniK.Samples.Symphony.Packages
  nameWithType: ArmoniK.Samples.Symphony.Packages
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html
  commentId: T:ArmoniK.Samples.Symphony.Packages.ServiceContainer
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  name: ComputeCube(TaskContext, ClientPayload)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeCube_ArmoniK_DevelopmentKit_Worker_Symphony_TaskContext_Armonik_Samples_Symphony_Common_ClientPayload_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext, Armonik.Samples.Symphony.Common.ClientPayload)
  nameWithType: ServiceContainer.ComputeCube(TaskContext, ClientPayload)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube*
  name: ComputeCube
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeCube_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube
  nameWithType: ServiceContainer.ComputeCube
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  name: ComputeSquare(TaskContext, ClientPayload)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeSquare_ArmoniK_DevelopmentKit_Worker_Symphony_TaskContext_Armonik_Samples_Symphony_Common_ClientPayload_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext, Armonik.Samples.Symphony.Common.ClientPayload)
  nameWithType: ServiceContainer.ComputeSquare(TaskContext, ClientPayload)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare*
  name: ComputeSquare
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeSquare_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare
  nameWithType: ServiceContainer.ComputeSquare
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  name: OnCreateService(ServiceContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnCreateService_ArmoniK_DevelopmentKit_Worker_Symphony_ServiceContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  nameWithType: ServiceContainer.OnCreateService(ServiceContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService*
  name: OnCreateService
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnCreateService_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService
  nameWithType: ServiceContainer.OnCreateService
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  name: OnDestroyService(ServiceContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnDestroyService_ArmoniK_DevelopmentKit_Worker_Symphony_ServiceContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ArmoniK.DevelopmentKit.Worker.Symphony.ServiceContext)
  nameWithType: ServiceContainer.OnDestroyService(ServiceContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService*
  name: OnDestroyService
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnDestroyService_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService
  nameWithType: ServiceContainer.OnDestroyService
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext,ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  name: OnInvoke(SessionContext, TaskContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnInvoke_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_ArmoniK_DevelopmentKit_Worker_Symphony_TaskContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext,ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext, ArmoniK.DevelopmentKit.Worker.Symphony.TaskContext)
  nameWithType: ServiceContainer.OnInvoke(SessionContext, TaskContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke*
  name: OnInvoke
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnInvoke_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke
  nameWithType: ServiceContainer.OnInvoke
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  name: OnSessionEnter(SessionContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionEnter_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  nameWithType: ServiceContainer.OnSessionEnter(SessionContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter*
  name: OnSessionEnter
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionEnter_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter
  nameWithType: ServiceContainer.OnSessionEnter
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  name: OnSessionLeave(SessionContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionLeave_ArmoniK_DevelopmentKit_Worker_Symphony_SessionContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(ArmoniK.DevelopmentKit.Worker.Symphony.SessionContext)
  nameWithType: ServiceContainer.OnSessionLeave(SessionContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave*
  name: OnSessionLeave
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionLeave_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave
  nameWithType: ServiceContainer.OnSessionLeave
- uid: ArmoniK.Samples.Unified.Worker.Services
  name: ArmoniK.Samples.Unified.Worker.Services
  href: api/ArmoniK.Samples.Unified.Worker.Services.html
  commentId: N:ArmoniK.Samples.Unified.Worker.Services
  fullName: ArmoniK.Samples.Unified.Worker.Services
  nameWithType: ArmoniK.Samples.Unified.Worker.Services
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  name: ServiceApps
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html
  commentId: T:ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  nameWithType: ServiceApps
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  name: ServiceApps()
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps__ctor
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  name.vb: New()
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ServiceApps()
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.New()
  nameWithType: ServiceApps.ServiceApps()
  nameWithType.vb: ServiceApps.New()
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor*
  name: ServiceApps
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps__ctor_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  isSpec: "True"
  name.vb: New
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ServiceApps
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.New
  nameWithType: ServiceApps.ServiceApps
  nameWithType.vb: ServiceApps.New
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double[])
  name: ComputeBasicArrayCube(double[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeBasicArrayCube_System_Double___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double[])
  name.vb: ComputeBasicArrayCube(Double())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(double[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(Double())
  nameWithType: ServiceApps.ComputeBasicArrayCube(double[])
  nameWithType.vb: ServiceApps.ComputeBasicArrayCube(Double())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube*
  name: ComputeBasicArrayCube
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeBasicArrayCube_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube
  nameWithType: ServiceApps.ComputeBasicArrayCube
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: ComputeMadd(byte[], byte[], double)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: ComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(byte[], byte[], double)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(Byte(), Byte(), Double)
  nameWithType: ServiceApps.ComputeMadd(byte[], byte[], double)
  nameWithType.vb: ServiceApps.ComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd*
  name: ComputeMadd
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeMadd_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd
  nameWithType: ServiceApps.ComputeMadd
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double[])
  name: ComputeReduce(double[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduce_System_Double___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double[])
  name.vb: ComputeReduce(Double())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(double[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(Double())
  nameWithType: ServiceApps.ComputeReduce(double[])
  nameWithType.vb: ServiceApps.ComputeReduce(Double())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce*
  name: ComputeReduce
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduce_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce
  nameWithType: ServiceApps.ComputeReduce
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte[])
  name: ComputeReduceCube(byte[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_System_Byte___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte[])
  name.vb: ComputeReduceCube(Byte())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(byte[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(Byte())
  nameWithType: ServiceApps.ComputeReduceCube(byte[])
  nameWithType.vb: ServiceApps.ComputeReduceCube(Byte())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double[],System.Int32)
  name: ComputeReduceCube(double[], int)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_System_Double___System_Int32_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double[],System.Int32)
  name.vb: ComputeReduceCube(Double(), Integer)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(double[], int)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(Double(), Integer)
  nameWithType: ServiceApps.ComputeReduceCube(double[], int)
  nameWithType.vb: ServiceApps.ComputeReduceCube(Double(), Integer)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube*
  name: ComputeReduceCube
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube
  nameWithType: ServiceApps.ComputeReduceCube
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: NonStaticComputeMadd(byte[], byte[], double)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_NonStaticComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: NonStaticComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(byte[], byte[], double)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(Byte(), Byte(), Double)
  nameWithType: ServiceApps.NonStaticComputeMadd(byte[], byte[], double)
  nameWithType.vb: ServiceApps.NonStaticComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd*
  name: NonStaticComputeMadd
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_NonStaticComputeMadd_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd
  nameWithType: ServiceApps.NonStaticComputeMadd
