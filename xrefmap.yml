### YamlMime:XRefMap
sorted: true
references:
- uid: ArmoniK.HelloWorld.Worker
  name: ArmoniK.HelloWorld.Worker
  href: api/ArmoniK.HelloWorld.Worker.html
  commentId: N:ArmoniK.HelloWorld.Worker
  fullName: ArmoniK.HelloWorld.Worker
  nameWithType: ArmoniK.HelloWorld.Worker
- uid: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.html
  commentId: T:ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager
  fullName: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager
- uid: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name: ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  href: api/ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.html#ArmoniK_HelloWorld_Worker_ApplicationLifeTimeManager__ctor_ILogger_ArmoniK_HelloWorld_Worker_ApplicationLifeTimeManager__IHostApplicationLifetime_
  commentId: M:ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.#ctor(ILogger{ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager},IHostApplicationLifetime)
  name.vb: ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
  fullName: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager>, IHostApplicationLifetime)
  fullName.vb: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager), IHostApplicationLifetime)
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger<ApplicationLifeTimeManager>, IHostApplicationLifetime)
  nameWithType.vb: ApplicationLifeTimeManager.ApplicationLifeTimeManager(ILogger(Of ApplicationLifeTimeManager), IHostApplicationLifetime)
- uid: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.#ctor*
  name: ApplicationLifeTimeManager
  href: api/ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.html#ArmoniK_HelloWorld_Worker_ApplicationLifeTimeManager__ctor_
  commentId: Overload:ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.#ctor
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager.ApplicationLifeTimeManager
  nameWithType: ApplicationLifeTimeManager.ApplicationLifeTimeManager
- uid: ArmoniK.HelloWorld.Worker.Program
  name: Program
  href: api/ArmoniK.HelloWorld.Worker.Program.html
  commentId: T:ArmoniK.HelloWorld.Worker.Program
  fullName: ArmoniK.HelloWorld.Worker.Program
  nameWithType: Program
- uid: ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder(System.String[])
  name: CreateHostBuilder(String[])
  href: api/ArmoniK.HelloWorld.Worker.Program.html#ArmoniK_HelloWorld_Worker_Program_CreateHostBuilder_System_String___
  commentId: M:ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder(System.String[])
  name.vb: CreateHostBuilder(String())
  fullName: ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder(System.String[])
  fullName.vb: ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder(System.String())
  nameWithType: Program.CreateHostBuilder(String[])
  nameWithType.vb: Program.CreateHostBuilder(String())
- uid: ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder*
  name: CreateHostBuilder
  href: api/ArmoniK.HelloWorld.Worker.Program.html#ArmoniK_HelloWorld_Worker_Program_CreateHostBuilder_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Program.CreateHostBuilder
  nameWithType: Program.CreateHostBuilder
- uid: ArmoniK.HelloWorld.Worker.Program.Main(System.String[])
  name: Main(String[])
  href: api/ArmoniK.HelloWorld.Worker.Program.html#ArmoniK_HelloWorld_Worker_Program_Main_System_String___
  commentId: M:ArmoniK.HelloWorld.Worker.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: ArmoniK.HelloWorld.Worker.Program.Main(System.String[])
  fullName.vb: ArmoniK.HelloWorld.Worker.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: ArmoniK.HelloWorld.Worker.Program.Main*
  name: Main
  href: api/ArmoniK.HelloWorld.Worker.Program.html#ArmoniK_HelloWorld_Worker_Program_Main_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Program.Main
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Program.Main
  nameWithType: Program.Main
- uid: ArmoniK.HelloWorld.Worker.SampleComputerService
  name: SampleComputerService
  href: api/ArmoniK.HelloWorld.Worker.SampleComputerService.html
  commentId: T:ArmoniK.HelloWorld.Worker.SampleComputerService
  fullName: ArmoniK.HelloWorld.Worker.SampleComputerService
  nameWithType: SampleComputerService
- uid: ArmoniK.HelloWorld.Worker.SampleComputerService.#ctor(ILoggerFactory,ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager)
  name: SampleComputerService(ILoggerFactory, ApplicationLifeTimeManager)
  href: api/ArmoniK.HelloWorld.Worker.SampleComputerService.html#ArmoniK_HelloWorld_Worker_SampleComputerService__ctor_ILoggerFactory_ArmoniK_HelloWorld_Worker_ApplicationLifeTimeManager_
  commentId: M:ArmoniK.HelloWorld.Worker.SampleComputerService.#ctor(ILoggerFactory,ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager)
  fullName: ArmoniK.HelloWorld.Worker.SampleComputerService.SampleComputerService(ILoggerFactory, ArmoniK.HelloWorld.Worker.ApplicationLifeTimeManager)
  nameWithType: SampleComputerService.SampleComputerService(ILoggerFactory, ApplicationLifeTimeManager)
- uid: ArmoniK.HelloWorld.Worker.SampleComputerService.#ctor*
  name: SampleComputerService
  href: api/ArmoniK.HelloWorld.Worker.SampleComputerService.html#ArmoniK_HelloWorld_Worker_SampleComputerService__ctor_
  commentId: Overload:ArmoniK.HelloWorld.Worker.SampleComputerService.#ctor
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.SampleComputerService.SampleComputerService
  nameWithType: SampleComputerService.SampleComputerService
- uid: ArmoniK.HelloWorld.Worker.SampleComputerService.Execute(ComputeRequest,ServerCallContext)
  name: Execute(ComputeRequest, ServerCallContext)
  href: api/ArmoniK.HelloWorld.Worker.SampleComputerService.html#ArmoniK_HelloWorld_Worker_SampleComputerService_Execute_ComputeRequest_ServerCallContext_
  commentId: M:ArmoniK.HelloWorld.Worker.SampleComputerService.Execute(ComputeRequest,ServerCallContext)
  fullName: ArmoniK.HelloWorld.Worker.SampleComputerService.Execute(ComputeRequest, ServerCallContext)
  nameWithType: SampleComputerService.Execute(ComputeRequest, ServerCallContext)
- uid: ArmoniK.HelloWorld.Worker.SampleComputerService.Execute*
  name: Execute
  href: api/ArmoniK.HelloWorld.Worker.SampleComputerService.html#ArmoniK_HelloWorld_Worker_SampleComputerService_Execute_
  commentId: Overload:ArmoniK.HelloWorld.Worker.SampleComputerService.Execute
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.SampleComputerService.Execute
  nameWithType: SampleComputerService.Execute
- uid: ArmoniK.HelloWorld.Worker.Startup
  name: Startup
  href: api/ArmoniK.HelloWorld.Worker.Startup.html
  commentId: T:ArmoniK.HelloWorld.Worker.Startup
  fullName: ArmoniK.HelloWorld.Worker.Startup
  nameWithType: Startup
- uid: ArmoniK.HelloWorld.Worker.Startup.#ctor(IWebHostEnvironment)
  name: Startup(IWebHostEnvironment)
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup__ctor_IWebHostEnvironment_
  commentId: M:ArmoniK.HelloWorld.Worker.Startup.#ctor(IWebHostEnvironment)
  fullName: ArmoniK.HelloWorld.Worker.Startup.Startup(IWebHostEnvironment)
  nameWithType: Startup.Startup(IWebHostEnvironment)
- uid: ArmoniK.HelloWorld.Worker.Startup.#ctor*
  name: Startup
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup__ctor_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Startup.#ctor
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Startup.Startup
  nameWithType: Startup.Startup
- uid: ArmoniK.HelloWorld.Worker.Startup.Configuration
  name: Configuration
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_Configuration
  commentId: P:ArmoniK.HelloWorld.Worker.Startup.Configuration
  fullName: ArmoniK.HelloWorld.Worker.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: ArmoniK.HelloWorld.Worker.Startup.Configuration*
  name: Configuration
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_Configuration_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Startup.Configuration
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: ArmoniK.HelloWorld.Worker.Startup.Configure(IApplicationBuilder,IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_Configure_IApplicationBuilder_IWebHostEnvironment_
  commentId: M:ArmoniK.HelloWorld.Worker.Startup.Configure(IApplicationBuilder,IWebHostEnvironment)
  fullName: ArmoniK.HelloWorld.Worker.Startup.Configure(IApplicationBuilder, IWebHostEnvironment)
  nameWithType: Startup.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: ArmoniK.HelloWorld.Worker.Startup.Configure*
  name: Configure
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_Configure_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Startup.Configure
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Startup.Configure
  nameWithType: Startup.Configure
- uid: ArmoniK.HelloWorld.Worker.Startup.ConfigureServices(IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_ConfigureServices_IServiceCollection_
  commentId: M:ArmoniK.HelloWorld.Worker.Startup.ConfigureServices(IServiceCollection)
  fullName: ArmoniK.HelloWorld.Worker.Startup.ConfigureServices(IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: ArmoniK.HelloWorld.Worker.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/ArmoniK.HelloWorld.Worker.Startup.html#ArmoniK_HelloWorld_Worker_Startup_ConfigureServices_
  commentId: Overload:ArmoniK.HelloWorld.Worker.Startup.ConfigureServices
  isSpec: "True"
  fullName: ArmoniK.HelloWorld.Worker.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: ArmoniK.Samples.Client
  name: ArmoniK.Samples.Client
  href: api/ArmoniK.Samples.Client.html
  commentId: N:ArmoniK.Samples.Client
  fullName: ArmoniK.Samples.Client
  nameWithType: ArmoniK.Samples.Client
- uid: ArmoniK.Samples.Client.Utils
  name: Utils
  href: api/ArmoniK.Samples.Client.Utils.html
  commentId: T:ArmoniK.Samples.Client.Utils
  fullName: ArmoniK.Samples.Client.Utils
  nameWithType: Utils
- uid: ArmoniK.Samples.Client.Utils.ParamsHelper(System.Object[])
  name: ParamsHelper(Object[])
  href: api/ArmoniK.Samples.Client.Utils.html#ArmoniK_Samples_Client_Utils_ParamsHelper_System_Object___
  commentId: M:ArmoniK.Samples.Client.Utils.ParamsHelper(System.Object[])
  name.vb: ParamsHelper(Object())
  fullName: ArmoniK.Samples.Client.Utils.ParamsHelper(System.Object[])
  fullName.vb: ArmoniK.Samples.Client.Utils.ParamsHelper(System.Object())
  nameWithType: Utils.ParamsHelper(Object[])
  nameWithType.vb: Utils.ParamsHelper(Object())
- uid: ArmoniK.Samples.Client.Utils.ParamsHelper*
  name: ParamsHelper
  href: api/ArmoniK.Samples.Client.Utils.html#ArmoniK_Samples_Client_Utils_ParamsHelper_
  commentId: Overload:ArmoniK.Samples.Client.Utils.ParamsHelper
  isSpec: "True"
  fullName: ArmoniK.Samples.Client.Utils.ParamsHelper
  nameWithType: Utils.ParamsHelper
- uid: ArmoniK.Samples.Client.Utils.PeriodicInfo(Action,System.Int32)
  name: PeriodicInfo(Action, Int32)
  href: api/ArmoniK.Samples.Client.Utils.html#ArmoniK_Samples_Client_Utils_PeriodicInfo_Action_System_Int32_
  commentId: M:ArmoniK.Samples.Client.Utils.PeriodicInfo(Action,System.Int32)
  fullName: ArmoniK.Samples.Client.Utils.PeriodicInfo(Action, System.Int32)
  nameWithType: Utils.PeriodicInfo(Action, Int32)
- uid: ArmoniK.Samples.Client.Utils.PeriodicInfo*
  name: PeriodicInfo
  href: api/ArmoniK.Samples.Client.Utils.html#ArmoniK_Samples_Client_Utils_PeriodicInfo_
  commentId: Overload:ArmoniK.Samples.Client.Utils.PeriodicInfo
  isSpec: "True"
  fullName: ArmoniK.Samples.Client.Utils.PeriodicInfo
  nameWithType: Utils.PeriodicInfo
- uid: ArmoniK.Samples.Common
  name: ArmoniK.Samples.Common
  href: api/ArmoniK.Samples.Common.html
  commentId: N:ArmoniK.Samples.Common
  fullName: ArmoniK.Samples.Common
  nameWithType: ArmoniK.Samples.Common
- uid: ArmoniK.Samples.Common.ClientPayload
  name: ClientPayload
  href: api/ArmoniK.Samples.Common.ClientPayload.html
  commentId: T:ArmoniK.Samples.Common.ClientPayload
  fullName: ArmoniK.Samples.Common.ClientPayload
  nameWithType: ClientPayload
- uid: ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte[])
  name: deserialize(Byte[])
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_deserialize_System_Byte___
  commentId: M:ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte[])
  name.vb: deserialize(Byte())
  fullName: ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte[])
  fullName.vb: ArmoniK.Samples.Common.ClientPayload.deserialize(System.Byte())
  nameWithType: ClientPayload.deserialize(Byte[])
  nameWithType.vb: ClientPayload.deserialize(Byte())
- uid: ArmoniK.Samples.Common.ClientPayload.deserialize*
  name: deserialize
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_deserialize_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.deserialize
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.deserialize
  nameWithType: ClientPayload.deserialize
- uid: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  name: IsRootTask
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_IsRootTask
  commentId: P:ArmoniK.Samples.Common.ClientPayload.IsRootTask
  fullName: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: ArmoniK.Samples.Common.ClientPayload.IsRootTask*
  name: IsRootTask
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_IsRootTask_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.IsRootTask
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: ArmoniK.Samples.Common.ClientPayload.numbers
  name: numbers
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_numbers
  commentId: P:ArmoniK.Samples.Common.ClientPayload.numbers
  fullName: ArmoniK.Samples.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: ArmoniK.Samples.Common.ClientPayload.numbers*
  name: numbers
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_numbers_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.numbers
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: ArmoniK.Samples.Common.ClientPayload.result
  name: result
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_result
  commentId: P:ArmoniK.Samples.Common.ClientPayload.result
  fullName: ArmoniK.Samples.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: ArmoniK.Samples.Common.ClientPayload.result*
  name: result
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_result_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.result
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: ArmoniK.Samples.Common.ClientPayload.serialize
  name: serialize()
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_serialize
  commentId: M:ArmoniK.Samples.Common.ClientPayload.serialize
  fullName: ArmoniK.Samples.Common.ClientPayload.serialize()
  nameWithType: ClientPayload.serialize()
- uid: ArmoniK.Samples.Common.ClientPayload.serialize*
  name: serialize
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_serialize_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.serialize
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.serialize
  nameWithType: ClientPayload.serialize
- uid: ArmoniK.Samples.Common.ClientPayload.sleep
  name: sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_sleep
  commentId: P:ArmoniK.Samples.Common.ClientPayload.sleep
  fullName: ArmoniK.Samples.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: ArmoniK.Samples.Common.ClientPayload.sleep*
  name: sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_sleep_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.sleep
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  name: SubTaskId
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_SubTaskId
  commentId: P:ArmoniK.Samples.Common.ClientPayload.SubTaskId
  fullName: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: ArmoniK.Samples.Common.ClientPayload.SubTaskId*
  name: SubTaskId
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_SubTaskId_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.SubTaskId
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType
  name: ClientPayload.TaskType
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html
  commentId: T:ArmoniK.Samples.Common.ClientPayload.TaskType
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType
  nameWithType: ClientPayload.TaskType
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  name: Aggregation
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Aggregation
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Aggregation
  nameWithType: ClientPayload.TaskType.Aggregation
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  name: ComputeCube
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_ComputeCube
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeCube
  nameWithType: ClientPayload.TaskType.ComputeCube
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  name: ComputeSquare
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_ComputeSquare
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.ComputeSquare
  nameWithType: ClientPayload.TaskType.ComputeSquare
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  name: JobOfNTasks
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_JobOfNTasks
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.JobOfNTasks
  nameWithType: ClientPayload.TaskType.JobOfNTasks
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  name: NJobOf1Tasks
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_NJobOf1Tasks
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.NJobOf1Tasks
  nameWithType: ClientPayload.TaskType.NJobOf1Tasks
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  name: Result
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Result
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Result
  nameWithType: ClientPayload.TaskType.Result
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  name: Sleep
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Sleep
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Sleep
  nameWithType: ClientPayload.TaskType.Sleep
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  name: SubTask
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_SubTask
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.SubTask
  nameWithType: ClientPayload.TaskType.SubTask
- uid: ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  name: Undefined
  href: api/ArmoniK.Samples.Common.ClientPayload.TaskType.html#ArmoniK_Samples_Common_ClientPayload_TaskType_Undefined
  commentId: F:ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  fullName: ArmoniK.Samples.Common.ClientPayload.TaskType.Undefined
  nameWithType: ClientPayload.TaskType.Undefined
- uid: ArmoniK.Samples.Common.ClientPayload.Type
  name: Type
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_Type
  commentId: P:ArmoniK.Samples.Common.ClientPayload.Type
  fullName: ArmoniK.Samples.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Common.ClientPayload.Type*
  name: Type
  href: api/ArmoniK.Samples.Common.ClientPayload.html#ArmoniK_Samples_Common_ClientPayload_Type_
  commentId: Overload:ArmoniK.Samples.Common.ClientPayload.Type
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Common.SelectExtensions
  name: SelectExtensions
  href: api/ArmoniK.Samples.Common.SelectExtensions.html
  commentId: T:ArmoniK.Samples.Common.SelectExtensions
  fullName: ArmoniK.Samples.Common.SelectExtensions
  nameWithType: SelectExtensions
- uid: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(IEnumerable{System.Byte})
  name: ConvertToArray(IEnumerable<Byte>)
  href: api/ArmoniK.Samples.Common.SelectExtensions.html#ArmoniK_Samples_Common_SelectExtensions_ConvertToArray_IEnumerable_System_Byte__
  commentId: M:ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(IEnumerable{System.Byte})
  name.vb: ConvertToArray(IEnumerable(Of Byte))
  fullName: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(IEnumerable<System.Byte>)
  fullName.vb: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray(IEnumerable(Of System.Byte))
  nameWithType: SelectExtensions.ConvertToArray(IEnumerable<Byte>)
  nameWithType.vb: SelectExtensions.ConvertToArray(IEnumerable(Of Byte))
- uid: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray*
  name: ConvertToArray
  href: api/ArmoniK.Samples.Common.SelectExtensions.html#ArmoniK_Samples_Common_SelectExtensions_ConvertToArray_
  commentId: Overload:ArmoniK.Samples.Common.SelectExtensions.ConvertToArray
  isSpec: "True"
  fullName: ArmoniK.Samples.Common.SelectExtensions.ConvertToArray
  nameWithType: SelectExtensions.ConvertToArray
- uid: ArmoniK.Samples.GridServer.Client.Services
  name: ArmoniK.Samples.GridServer.Client.Services
  href: api/ArmoniK.Samples.GridServer.Client.Services.html
  commentId: N:ArmoniK.Samples.GridServer.Client.Services
  fullName: ArmoniK.Samples.GridServer.Client.Services
  nameWithType: ArmoniK.Samples.GridServer.Client.Services
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html
  commentId: T:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  name: ServiceContainer()
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer__ctor
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ServiceContainer()
  nameWithType: ServiceContainer.ServiceContainer()
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor*
  name: ServiceContainer
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer__ctor_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ServiceContainer
  nameWithType: ServiceContainer.ServiceContainer
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double[])
  name: ComputeBasicArrayCube(Double[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeBasicArrayCube_System_Double___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double[])
  name.vb: ComputeBasicArrayCube(Double())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube(System.Double())
  nameWithType: ServiceContainer.ComputeBasicArrayCube(Double[])
  nameWithType.vb: ServiceContainer.ComputeBasicArrayCube(Double())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube*
  name: ComputeBasicArrayCube
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeBasicArrayCube_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeBasicArrayCube
  nameWithType: ServiceContainer.ComputeBasicArrayCube
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: ComputeMadd(Byte[], Byte[], Double)
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: ComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte[], System.Byte[], System.Double)
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd(System.Byte(), System.Byte(), System.Double)
  nameWithType: ServiceContainer.ComputeMadd(Byte[], Byte[], Double)
  nameWithType.vb: ServiceContainer.ComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd*
  name: ComputeMadd
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeMadd_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeMadd
  nameWithType: ServiceContainer.ComputeMadd
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte[])
  name: ComputeReduceCube(Byte[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_System_Byte___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte[])
  name.vb: ComputeReduceCube(Byte())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Byte())
  nameWithType: ServiceContainer.ComputeReduceCube(Byte[])
  nameWithType.vb: ServiceContainer.ComputeReduceCube(Byte())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double[])
  name: ComputeReduceCube(Double[])
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_System_Double___
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double[])
  name.vb: ComputeReduceCube(Double())
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double[])
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube(System.Double())
  nameWithType: ServiceContainer.ComputeReduceCube(Double[])
  nameWithType.vb: ServiceContainer.ComputeReduceCube(Double())
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube*
  name: ComputeReduceCube
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_ComputeReduceCube_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.ComputeReduceCube
  nameWithType: ServiceContainer.ComputeReduceCube
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: NonStaticComputeMadd(Byte[], Byte[], Double)
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_NonStaticComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: NonStaticComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte[], System.Byte[], System.Double)
  fullName.vb: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd(System.Byte(), System.Byte(), System.Double)
  nameWithType: ServiceContainer.NonStaticComputeMadd(Byte[], Byte[], Double)
  nameWithType.vb: ServiceContainer.NonStaticComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd*
  name: NonStaticComputeMadd
  href: api/ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.html#ArmoniK_Samples_GridServer_Client_Services_ServiceContainer_NonStaticComputeMadd_
  commentId: Overload:ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Client.Services.ServiceContainer.NonStaticComputeMadd
  nameWithType: ServiceContainer.NonStaticComputeMadd
- uid: ArmoniK.Samples.GridServer.Common
  name: ArmoniK.Samples.GridServer.Common
  href: api/ArmoniK.Samples.GridServer.Common.html
  commentId: N:ArmoniK.Samples.GridServer.Common
  fullName: ArmoniK.Samples.GridServer.Common
  nameWithType: ArmoniK.Samples.GridServer.Common
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions
  name: SelectExtensions
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html
  commentId: T:ArmoniK.Samples.GridServer.Common.SelectExtensions
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions
  nameWithType: SelectExtensions
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(IEnumerable{System.Byte})
  name: ConvertToArray(IEnumerable<Byte>)
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html#ArmoniK_Samples_GridServer_Common_SelectExtensions_ConvertToArray_IEnumerable_System_Byte__
  commentId: M:ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(IEnumerable{System.Byte})
  name.vb: ConvertToArray(IEnumerable(Of Byte))
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(IEnumerable<System.Byte>)
  fullName.vb: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray(IEnumerable(Of System.Byte))
  nameWithType: SelectExtensions.ConvertToArray(IEnumerable<Byte>)
  nameWithType.vb: SelectExtensions.ConvertToArray(IEnumerable(Of Byte))
- uid: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray*
  name: ConvertToArray
  href: api/ArmoniK.Samples.GridServer.Common.SelectExtensions.html#ArmoniK_Samples_GridServer_Common_SelectExtensions_ConvertToArray_
  commentId: Overload:ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray
  isSpec: "True"
  fullName: ArmoniK.Samples.GridServer.Common.SelectExtensions.ConvertToArray
  nameWithType: SelectExtensions.ConvertToArray
- uid: ArmoniK.Samples.HtcMockSymphony.Packages
  name: ArmoniK.Samples.HtcMockSymphony.Packages
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.html
  commentId: N:ArmoniK.Samples.HtcMockSymphony.Packages
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages
  nameWithType: ArmoniK.Samples.HtcMockSymphony.Packages
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html
  commentId: T:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  name: OnCreateService(ServiceContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnCreateService_ServiceContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  nameWithType: ServiceContainer.OnCreateService(ServiceContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService*
  name: OnCreateService
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnCreateService_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnCreateService
  nameWithType: ServiceContainer.OnCreateService
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  name: OnDestroyService(ServiceContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnDestroyService_ServiceContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  nameWithType: ServiceContainer.OnDestroyService(ServiceContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService*
  name: OnDestroyService
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnDestroyService_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnDestroyService
  nameWithType: ServiceContainer.OnDestroyService
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(SessionContext,TaskContext)
  name: OnInvoke(SessionContext, TaskContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnInvoke_SessionContext_TaskContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(SessionContext,TaskContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke(SessionContext, TaskContext)
  nameWithType: ServiceContainer.OnInvoke(SessionContext, TaskContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke*
  name: OnInvoke
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnInvoke_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnInvoke
  nameWithType: ServiceContainer.OnInvoke
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  name: OnSessionEnter(SessionContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionEnter_SessionContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  nameWithType: ServiceContainer.OnSessionEnter(SessionContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter*
  name: OnSessionEnter
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionEnter_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionEnter
  nameWithType: ServiceContainer.OnSessionEnter
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  name: OnSessionLeave(SessionContext)
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionLeave_SessionContext_
  commentId: M:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  nameWithType: ServiceContainer.OnSessionLeave(SessionContext)
- uid: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave*
  name: OnSessionLeave
  href: api/ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.html#ArmoniK_Samples_HtcMockSymphony_Packages_ServiceContainer_OnSessionLeave_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphony.Packages.ServiceContainer.OnSessionLeave
  nameWithType: ServiceContainer.OnSessionLeave
- uid: ArmoniK.Samples.HtcMockSymphonyClient
  name: ArmoniK.Samples.HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.html
  commentId: N:ArmoniK.Samples.HtcMockSymphonyClient
  fullName: ArmoniK.Samples.HtcMockSymphonyClient
  nameWithType: ArmoniK.Samples.HtcMockSymphonyClient
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  name: HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html
  commentId: T:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient
  nameWithType: HtcMockSymphonyClient
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor(SessionService,ILogger{Client})
  name: HtcMockSymphonyClient(SessionService, ILogger<Client>)
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient__ctor_SessionService_ILogger_Client__
  commentId: M:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor(SessionService,ILogger{Client})
  name.vb: HtcMockSymphonyClient(SessionService, ILogger(Of Client))
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.HtcMockSymphonyClient(SessionService, ILogger<Client>)
  fullName.vb: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.HtcMockSymphonyClient(SessionService, ILogger(Of Client))
  nameWithType: HtcMockSymphonyClient.HtcMockSymphonyClient(SessionService, ILogger<Client>)
  nameWithType.vb: HtcMockSymphonyClient.HtcMockSymphonyClient(SessionService, ILogger(Of Client))
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor*
  name: HtcMockSymphonyClient
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient__ctor_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.HtcMockSymphonyClient
  nameWithType: HtcMockSymphonyClient.HtcMockSymphonyClient
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(RunConfiguration)
  name: Start(RunConfiguration)
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient_Start_RunConfiguration_
  commentId: M:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(RunConfiguration)
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start(RunConfiguration)
  nameWithType: HtcMockSymphonyClient.Start(RunConfiguration)
- uid: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start*
  name: Start
  href: api/ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.html#ArmoniK_Samples_HtcMockSymphonyClient_HtcMockSymphonyClient_Start_
  commentId: Overload:ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start
  isSpec: "True"
  fullName: ArmoniK.Samples.HtcMockSymphonyClient.HtcMockSymphonyClient.Start
  nameWithType: HtcMockSymphonyClient.Start
- uid: Armonik.Samples.Symphony.Common
  name: Armonik.Samples.Symphony.Common
  href: api/Armonik.Samples.Symphony.Common.html
  commentId: N:Armonik.Samples.Symphony.Common
  fullName: Armonik.Samples.Symphony.Common
  nameWithType: Armonik.Samples.Symphony.Common
- uid: Armonik.Samples.Symphony.Common.ClientPayload
  name: ClientPayload
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html
  commentId: T:Armonik.Samples.Symphony.Common.ClientPayload
  fullName: Armonik.Samples.Symphony.Common.ClientPayload
  nameWithType: ClientPayload
- uid: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte[])
  name: deserialize(Byte[])
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_deserialize_System_Byte___
  commentId: M:Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte[])
  name.vb: deserialize(Byte())
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte[])
  fullName.vb: Armonik.Samples.Symphony.Common.ClientPayload.deserialize(System.Byte())
  nameWithType: ClientPayload.deserialize(Byte[])
  nameWithType.vb: ClientPayload.deserialize(Byte())
- uid: Armonik.Samples.Symphony.Common.ClientPayload.deserialize*
  name: deserialize
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_deserialize_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.deserialize
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.deserialize
  nameWithType: ClientPayload.deserialize
- uid: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  name: IsRootTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_IsRootTask
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask*
  name: IsRootTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_IsRootTask_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.IsRootTask
  nameWithType: ClientPayload.IsRootTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  name: numbers
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_numbers
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.numbers
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: Armonik.Samples.Symphony.Common.ClientPayload.numbers*
  name: numbers
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_numbers_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.numbers
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.numbers
  nameWithType: ClientPayload.numbers
- uid: Armonik.Samples.Symphony.Common.ClientPayload.result
  name: result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_result
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.result
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.result*
  name: result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_result_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.result
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.result
  nameWithType: ClientPayload.result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.serialize
  name: serialize()
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_serialize
  commentId: M:Armonik.Samples.Symphony.Common.ClientPayload.serialize
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.serialize()
  nameWithType: ClientPayload.serialize()
- uid: Armonik.Samples.Symphony.Common.ClientPayload.serialize*
  name: serialize
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_serialize_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.serialize
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.serialize
  nameWithType: ClientPayload.serialize
- uid: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  name: sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_sleep
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.sleep
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.sleep*
  name: sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_sleep_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.sleep
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.sleep
  nameWithType: ClientPayload.sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  name: SubTaskId
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_SubTaskId
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId*
  name: SubTaskId
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_SubTaskId_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.SubTaskId
  nameWithType: ClientPayload.SubTaskId
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  name: ClientPayload.TaskType
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html
  commentId: T:Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType
  nameWithType: ClientPayload.TaskType
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  name: Aggregation
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Aggregation
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Aggregation
  nameWithType: ClientPayload.TaskType.Aggregation
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  name: ComputeCube
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_ComputeCube
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeCube
  nameWithType: ClientPayload.TaskType.ComputeCube
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  name: ComputeSquare
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_ComputeSquare
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.ComputeSquare
  nameWithType: ClientPayload.TaskType.ComputeSquare
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  name: JobOfNTasks
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_JobOfNTasks
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.JobOfNTasks
  nameWithType: ClientPayload.TaskType.JobOfNTasks
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  name: NJobOf1Tasks
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_NJobOf1Tasks
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.NJobOf1Tasks
  nameWithType: ClientPayload.TaskType.NJobOf1Tasks
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  name: Result
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Result
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Result
  nameWithType: ClientPayload.TaskType.Result
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  name: Sleep
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Sleep
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Sleep
  nameWithType: ClientPayload.TaskType.Sleep
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  name: SubTask
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_SubTask
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.SubTask
  nameWithType: ClientPayload.TaskType.SubTask
- uid: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  name: Undefined
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.TaskType.html#Armonik_Samples_Symphony_Common_ClientPayload_TaskType_Undefined
  commentId: F:Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.TaskType.Undefined
  nameWithType: ClientPayload.TaskType.Undefined
- uid: Armonik.Samples.Symphony.Common.ClientPayload.Type
  name: Type
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_Type
  commentId: P:Armonik.Samples.Symphony.Common.ClientPayload.Type
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: Armonik.Samples.Symphony.Common.ClientPayload.Type*
  name: Type
  href: api/Armonik.Samples.Symphony.Common.ClientPayload.html#Armonik_Samples_Symphony_Common_ClientPayload_Type_
  commentId: Overload:Armonik.Samples.Symphony.Common.ClientPayload.Type
  isSpec: "True"
  fullName: Armonik.Samples.Symphony.Common.ClientPayload.Type
  nameWithType: ClientPayload.Type
- uid: ArmoniK.Samples.Symphony.Packages
  name: ArmoniK.Samples.Symphony.Packages
  href: api/ArmoniK.Samples.Symphony.Packages.html
  commentId: N:ArmoniK.Samples.Symphony.Packages
  fullName: ArmoniK.Samples.Symphony.Packages
  nameWithType: ArmoniK.Samples.Symphony.Packages
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer
  name: ServiceContainer
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html
  commentId: T:ArmoniK.Samples.Symphony.Packages.ServiceContainer
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer
  nameWithType: ServiceContainer
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  name: ComputeCube(TaskContext, ClientPayload)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeCube_TaskContext_Armonik_Samples_Symphony_Common_ClientPayload_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube(TaskContext, Armonik.Samples.Symphony.Common.ClientPayload)
  nameWithType: ServiceContainer.ComputeCube(TaskContext, ClientPayload)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube*
  name: ComputeCube
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeCube_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeCube
  nameWithType: ServiceContainer.ComputeCube
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  name: ComputeSquare(TaskContext, ClientPayload)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeSquare_TaskContext_Armonik_Samples_Symphony_Common_ClientPayload_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(TaskContext,Armonik.Samples.Symphony.Common.ClientPayload)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare(TaskContext, Armonik.Samples.Symphony.Common.ClientPayload)
  nameWithType: ServiceContainer.ComputeSquare(TaskContext, ClientPayload)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare*
  name: ComputeSquare
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_ComputeSquare_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.ComputeSquare
  nameWithType: ServiceContainer.ComputeSquare
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  name: OnCreateService(ServiceContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnCreateService_ServiceContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService(ServiceContext)
  nameWithType: ServiceContainer.OnCreateService(ServiceContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService*
  name: OnCreateService
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnCreateService_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnCreateService
  nameWithType: ServiceContainer.OnCreateService
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  name: OnDestroyService(ServiceContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnDestroyService_ServiceContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService(ServiceContext)
  nameWithType: ServiceContainer.OnDestroyService(ServiceContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService*
  name: OnDestroyService
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnDestroyService_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnDestroyService
  nameWithType: ServiceContainer.OnDestroyService
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(SessionContext,TaskContext)
  name: OnInvoke(SessionContext, TaskContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnInvoke_SessionContext_TaskContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(SessionContext,TaskContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke(SessionContext, TaskContext)
  nameWithType: ServiceContainer.OnInvoke(SessionContext, TaskContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke*
  name: OnInvoke
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnInvoke_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnInvoke
  nameWithType: ServiceContainer.OnInvoke
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  name: OnSessionEnter(SessionContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionEnter_SessionContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter(SessionContext)
  nameWithType: ServiceContainer.OnSessionEnter(SessionContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter*
  name: OnSessionEnter
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionEnter_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionEnter
  nameWithType: ServiceContainer.OnSessionEnter
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  name: OnSessionLeave(SessionContext)
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionLeave_SessionContext_
  commentId: M:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave(SessionContext)
  nameWithType: ServiceContainer.OnSessionLeave(SessionContext)
- uid: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave*
  name: OnSessionLeave
  href: api/ArmoniK.Samples.Symphony.Packages.ServiceContainer.html#ArmoniK_Samples_Symphony_Packages_ServiceContainer_OnSessionLeave_
  commentId: Overload:ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave
  isSpec: "True"
  fullName: ArmoniK.Samples.Symphony.Packages.ServiceContainer.OnSessionLeave
  nameWithType: ServiceContainer.OnSessionLeave
- uid: ArmoniK.Samples.Unified.Worker.Services
  name: ArmoniK.Samples.Unified.Worker.Services
  href: api/ArmoniK.Samples.Unified.Worker.Services.html
  commentId: N:ArmoniK.Samples.Unified.Worker.Services
  fullName: ArmoniK.Samples.Unified.Worker.Services
  nameWithType: ArmoniK.Samples.Unified.Worker.Services
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  name: ServiceApps
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html
  commentId: T:ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps
  nameWithType: ServiceApps
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  name: ServiceApps()
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps__ctor
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ServiceApps()
  nameWithType: ServiceApps.ServiceApps()
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor*
  name: ServiceApps
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps__ctor_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.#ctor
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ServiceApps
  nameWithType: ServiceApps.ServiceApps
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double[])
  name: ComputeBasicArrayCube(Double[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeBasicArrayCube_System_Double___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double[])
  name.vb: ComputeBasicArrayCube(Double())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube(System.Double())
  nameWithType: ServiceApps.ComputeBasicArrayCube(Double[])
  nameWithType.vb: ServiceApps.ComputeBasicArrayCube(Double())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube*
  name: ComputeBasicArrayCube
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeBasicArrayCube_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeBasicArrayCube
  nameWithType: ServiceApps.ComputeBasicArrayCube
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: ComputeMadd(Byte[], Byte[], Double)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: ComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte[], System.Byte[], System.Double)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd(System.Byte(), System.Byte(), System.Double)
  nameWithType: ServiceApps.ComputeMadd(Byte[], Byte[], Double)
  nameWithType.vb: ServiceApps.ComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd*
  name: ComputeMadd
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeMadd_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeMadd
  nameWithType: ServiceApps.ComputeMadd
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double[])
  name: ComputeReduce(Double[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduce_System_Double___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double[])
  name.vb: ComputeReduce(Double())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce(System.Double())
  nameWithType: ServiceApps.ComputeReduce(Double[])
  nameWithType.vb: ServiceApps.ComputeReduce(Double())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce*
  name: ComputeReduce
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduce_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduce
  nameWithType: ServiceApps.ComputeReduce
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte[])
  name: ComputeReduceCube(Byte[])
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_System_Byte___
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte[])
  name.vb: ComputeReduceCube(Byte())
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte[])
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Byte())
  nameWithType: ServiceApps.ComputeReduceCube(Byte[])
  nameWithType.vb: ServiceApps.ComputeReduceCube(Byte())
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double[],System.Int32)
  name: ComputeReduceCube(Double[], Int32)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_System_Double___System_Int32_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double[],System.Int32)
  name.vb: ComputeReduceCube(Double(), Int32)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double[], System.Int32)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube(System.Double(), System.Int32)
  nameWithType: ServiceApps.ComputeReduceCube(Double[], Int32)
  nameWithType.vb: ServiceApps.ComputeReduceCube(Double(), Int32)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube*
  name: ComputeReduceCube
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_ComputeReduceCube_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.ComputeReduceCube
  nameWithType: ServiceApps.ComputeReduceCube
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name: NonStaticComputeMadd(Byte[], Byte[], Double)
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_NonStaticComputeMadd_System_Byte___System_Byte___System_Double_
  commentId: M:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte[],System.Byte[],System.Double)
  name.vb: NonStaticComputeMadd(Byte(), Byte(), Double)
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte[], System.Byte[], System.Double)
  fullName.vb: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd(System.Byte(), System.Byte(), System.Double)
  nameWithType: ServiceApps.NonStaticComputeMadd(Byte[], Byte[], Double)
  nameWithType.vb: ServiceApps.NonStaticComputeMadd(Byte(), Byte(), Double)
- uid: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd*
  name: NonStaticComputeMadd
  href: api/ArmoniK.Samples.Unified.Worker.Services.ServiceApps.html#ArmoniK_Samples_Unified_Worker_Services_ServiceApps_NonStaticComputeMadd_
  commentId: Overload:ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd
  isSpec: "True"
  fullName: ArmoniK.Samples.Unified.Worker.Services.ServiceApps.NonStaticComputeMadd
  nameWithType: ServiceApps.NonStaticComputeMadd
- uid: armonik_api_samples
  name: Armonik.Samples API
  href: api/index.html
